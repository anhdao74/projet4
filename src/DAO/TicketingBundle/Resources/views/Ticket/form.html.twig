{# src/DAO/TicketingBundle/Resources/views/Ticket/form.html.twig #}


<div class="well">
  {{ form_start(form, {'attr': {'class': 'form-horizontal'},'method': 'POST'}) }}

  {# Les erreurs générales du formulaire. #}
  {{ form_errors(form) }}


  <div class="form-group">
    {# Génération du label. #}
    {{ form_label(form.dateResa, "Date de visite", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

    {# Affichage des erreurs pour ce champ précis. #}
    {{ form_errors(form.dateResa) }}

    <div class="col-sm-10">
      {# Génération de l'input. #}
      {{ form_widget(form.dateResa, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>

  <div class="form-group">
    {{ form_label(form.nbTickets, "Nombre de billet", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
    {{ form_errors(form.nbTickets) }}
    <div class="col-sm-10">
      {{ form_widget(form.nbTickets, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>

  <div class="form-group">
    {{ form_label(form.ticketType, "Type de billet", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
    {{ form_errors(form.ticketType) }}
    <div class="col-sm-10">
      {{ form_widget(form.ticketType, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>

   <div class="form-group">
    {{ form_label(form.mailVisiteur, "Votre mail", {'label_attr': {'class': 'col-sm-2 control-label'}}, {'method': 'POST'}) }}
    {{ form_errors(form.mailVisiteur) }}
    <div class="col-sm-10">
      {{ form_widget(form.mailVisiteur, {'attr': {'class': 'form-control'}}, {'method': 'POST'}) }}
    </div>
  </div>

  

  {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
  {{ form_widget(form.Suivant, {'attr': {'class': 'btn btn-primary'}}) }}

  <div class="visitors" data-prototype="{{ form_widget(form.visitors.vars.prototype)|e('html_attr') }}">
  {{ form_row(form.visitors) }}

  {{ form_rest(form) }}


<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{# Voici le script en question : #}
<script type="text/javascript">

var $collectionHolder;

// setup an "add a tag" link
var $addVisitorButton = $('<button type="button" class="add_tag_link">Ajouter un visiteur</button>');
var $newLinkLi = $('<li></li>').append($addVisitorButton);

jQuery(document).ready(function() {
    // Get the ul that holds the collection of tags
    $collectionHolder = $('ul.visitors');

    // add the "add a tag" anchor and li to the tags ul
    $collectionHolder.append($newLinkLi);

    // count the current form inputs we have (e.g. 2), use that as the new
    // index when inserting a new item (e.g. 2)
    $collectionHolder.data('index', $collectionHolder.find(':input').length);

    $addVisitorButton.on('click', function(e) {
        // add a new tag form (see next code block)
        addVisitorForm($collectionHolder, $newLinkLi);
    });
});

    function addVisitorForm($collectionHolder, $newLinkLi) {
    // Get the data-prototype explained earlier
    var prototype = $collectionHolder.data('prototype');

    // get the new index
    var index = $collectionHolder.data('index');

    var newForm = prototype;
    // You need this only if you didn't set 'label' => false in your tags field in TaskType
    // Replace '__name__label__' in the prototype's HTML to
    // instead be a number based on how many items we have
    // newForm = newForm.replace(/__name__label__/g, index);

    // Replace '__name__' in the prototype's HTML to
    // instead be a number based on how many items we have
    newForm = newForm.replace(/__name__/g, index);

    // increase the index with one for the next item
    $collectionHolder.data('index', index + 1);

    // Display the form in the page in an li, before the "Add a tag" link li
    var $newFormLi = $('<li></li>').append(newForm);
    $newLinkLi.before($newFormLi);
}
